buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'https://maven.minecraftforge.net'
        }
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

sourceSets.main.resources { srcDir 'src/generated/resources' }
compileJava {
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
}

version = "${rootProject.mod_version}" as String
group = "me.neovitalism.${rootProject.mod_id}" as String
archivesBaseName = "${rootProject.mod_name}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.20.1'
}

repositories {
    mavenCentral()
    mavenLocal()
    ivy {
        setUrl('https://download.nodecdn.net/containers/reforged/server/release')
        metadataSources {
            artifact()
        }
        patternLayout {
            artifact('[revision]/[artifact].[ext]')
        }
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.1'

    minecraft "net.minecraftforge:forge:1.20.1-47.1.44"
    implementation fg.deobf('pixelmon:Pixelmon-1.20.1-9.2.3-server:9.2.3')
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

Map<String, Object> attributes = new HashMap<>()
attributes.put("Specification-Title", "${rootProject.mod_id}")
attributes.put("Specification-Vendor", "neovitalism")
attributes.put("Specification-Version", "1")
attributes.put("Implementation-Title", "${rootProject.mod_name}")
attributes.put("Implementation-Version", "${rootProject.mod_version}")
attributes.put("Implementation-Vendor","neovitalism")
attributes.put("Implementation-Timestamp", new Date().format("yyyy-MM-dd'T'HH,mm,ssZ"))
attributes.put("TweakClass", "org.spongepowered.asm.launch.MixinTweaker")
attributes.put("TweakOrder", 0)
attributes.put("MixinConfigs", "mixins.${rootProject.mod_id}.json")

jar.manifest.attributes(attributes)

mixin {
    add sourceSets.main, "mixins.${rootProject.mod_id}.refmap.json"
    config "mixins.${rootProject.mod_id}.json"
}

jar.finalizedBy('reobfJar')

Map<String, Object> properties = new HashMap<>()
properties.put('version', rootProject.mod_version)
properties.put('mod_id', rootProject.mod_id)
properties.put('mod_name', rootProject.mod_name)
properties.put('mod_description', rootProject.mod_description)
properties.put('github_page', rootProject.github_page)

processResources {
    inputs.properties(properties)
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml', "pack.mcmeta", "mixins.${rootProject.mod_id}.json"
        expand(properties)
    }
}

tasks.getByName('build').finalizedBy('copyToBuilds')

task copyToBuilds {
    doLast {
        copy {
            from "/build/libs/${rootProject.mod_name}-${rootProject.mod_version}.jar"
            rename("${rootProject.mod_name}-${rootProject.mod_version}.jar", "${rootProject.mod_name}-${rootProject.mod_version}-1.20.jar")
            into "${rootDir}/builds"
        }
    }.finalizedBy(clean)
}